/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import * as THREE from "three";

interface IProps {
  activeAction: string;
}

export default function Model(props: IProps) {
  const { activeAction } = props;
  const group = useRef<any>();
  const { nodes, materials, animations } = useGLTF("/models/aj.glb") as any;
  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    if (!actions[activeAction] || actions[activeAction] === null) return;

    if (activeAction !== "idle") {
      actions[activeAction]?.setLoop(THREE.LoopRepeat, 1);
      actions[activeAction]!.clampWhenFinished = true;
    }

    actions[activeAction]?.reset().fadeIn(0.3).play();

    return () => {
      actions[activeAction]?.fadeOut(0.3);
    };
  }, [activeAction]);

  return (
    <group ref={group} dispose={null}>
      <group name="Scene">
        <group name="AJ" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <skinnedMesh
            castShadow
            name="Boy01_Body_Geo"
            geometry={nodes.Boy01_Body_Geo.geometry}
            material={materials.Boy01_Body_MAT1}
            skeleton={nodes.Boy01_Body_Geo.skeleton}
          />
          <skinnedMesh
            castShadow
            name="Boy01_Brows_Geo"
            geometry={nodes.Boy01_Brows_Geo.geometry}
            material={materials.Boy01_Brows_MAT2}
            skeleton={nodes.Boy01_Brows_Geo.skeleton}
          />
          <skinnedMesh
            castShadow
            name="Boy01_Eyes_Geo"
            geometry={nodes.Boy01_Eyes_Geo.geometry}
            material={materials.Boy01_Eyes_MAT2}
            skeleton={nodes.Boy01_Eyes_Geo.skeleton}
          />
          <skinnedMesh
            castShadow
            name="h_Geo"
            geometry={nodes.h_Geo.geometry}
            material={materials.Boy01_Mouth_MAT2}
            skeleton={nodes.h_Geo.skeleton}
          />
          <primitive object={nodes.mixamorigHips} />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models/aj.glb");
